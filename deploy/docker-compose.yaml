version: '3.8'
services:
  app:
    build:
      context: ../
      dockerfile: deploy/app.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../data/app:/app/cmd/log

  postgres:
    image: postgres:latest
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER} -h ${DB_HOST} -p ${DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "${SESSION_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${SESSION_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ../../data/redis:/data

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "14268:14268"
      - "16686:16686"
