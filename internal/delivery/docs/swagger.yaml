definitions:
  models.CameraBase:
    properties:
      coordinates:
        items:
          type: number
        type: array
      description:
        type: string
      type:
        type: string
    required:
    - coordinates
    - description
    - type
    type: object
  models.SpecialistLogin:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  responses.CreationResponse:
    properties:
      id:
        type: integer
    type: object
  responses.JWTRefresh:
    properties:
      JWT:
        type: string
      RefreshToken:
        type: string
    type: object
  responses.MessageResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /public/camera_create:
    post:
      consumes:
      - application/json
      description: Creates a new camera and returns its ID upon successful creation.
      parameters:
      - description: Camera Creation
        in: body
        name: camera
        required: true
        schema:
          $ref: '#/definitions/models.CameraBase'
      produces:
      - application/json
      responses:
        "201":
          description: Successful creation, returning camera ID
          schema:
            $ref: '#/definitions/responses.CreationResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.MessageResponse'
      summary: Camera Creation
      tags:
      - public
  /public/camera_delete:
    delete:
      consumes:
      - application/json
      description: Deletes an existing camera by its ID.
      parameters:
      - description: Camera ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Successful deletion
        "400":
          description: Invalid input or Camera ID not found
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.MessageResponse'
      summary: Camera Deletion
      tags:
      - public
  /public/case_create:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new case with a photo (.jpeg / .jpg / .png / .svg) and
        case data in byte string.
      parameters:
      - description: Photo of the case
        in: formData
        name: photo
        required: true
        type: file
      - description: Case data in byte string format
        in: formData
        name: byte_string
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successful creation, returning case ID
          schema:
            $ref: '#/definitions/responses.CreationResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.MessageResponse'
      summary: Case Creation
      tags:
      - public
  /public/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes access and refresh tokens using a refresh token provided
        in the Authorization header.
      parameters:
      - description: Refresh Token
        in: header
        name: Refresh
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful token refresh, returning new jwt and refresh token
          schema:
            $ref: '#/definitions/responses.JWTRefresh'
        "400":
          description: No refresh token provided
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "401":
          description: Invalid or expired refresh token
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.MessageResponse'
      security:
      - ApiKeyAuth: []
      summary: Refresh Tokens
      tags:
      - public
  /public/specialist_login:
    post:
      consumes:
      - application/json
      description: Logs in a specialist and returns a jwt and refresh token upon successful
        login.
      parameters:
      - description: Specialist Login
        in: body
        name: specialist
        required: true
        schema:
          $ref: '#/definitions/models.SpecialistLogin'
      produces:
      - application/json
      responses:
        "201":
          description: Successful login, returning jwt and refresh token
          schema:
            $ref: '#/definitions/responses.JWTRefresh'
        "400":
          description: Invalid input or incorrect password / login
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.MessageResponse'
      summary: Specialist Login
      tags:
      - public
  /public/specialist_register:
    post:
      consumes:
      - multipart/form-data
      description: |-
        Registers a new specialist, uploads their photo, and returns a jwt and refresh token upon successful registration.
        Automatically level=1, is_verified=false.
        Login and password are required, along with a photo upload.
        There are some validation on password: More than 8 symbols, contain at least one number, one uppercase and one lowercase letter.
      parameters:
      - description: Login
        in: formData
        name: login
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Full Name
        in: formData
        name: fullname
        type: string
      - description: Photo Upload
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Successful registration, returning jwt and refresh token
          schema:
            $ref: '#/definitions/responses.JWTRefresh'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/responses.MessageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.MessageResponse'
      summary: Specialist Registration with Photo Upload
      tags:
      - public
swagger: "2.0"
