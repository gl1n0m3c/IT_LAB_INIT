{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/public/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Refreshes access and refresh tokens using a refresh token provided in the Authorization header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Refresh Tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh Token",
                        "name": "Refresh",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful token refresh, returning new jwt and refresh token",
                        "schema": {
                            "$ref": "#/definitions/responses.JWTRefresh"
                        }
                    },
                    "400": {
                        "description": "No refresh token provided",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    }
                }
            }
        },
        "/public/specialist_login": {
            "post": {
                "description": "Logs in a specialist and returns a jwt and refresh token upon successful login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Specialist Login",
                "parameters": [
                    {
                        "description": "Specialist Login",
                        "name": "specialist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SpecialistLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful login, returning jwt and refresh token",
                        "schema": {
                            "$ref": "#/definitions/responses.JWTRefresh"
                        }
                    },
                    "400": {
                        "description": "Invalid input or incorrect password / login",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    }
                }
            }
        },
        "/public/specialist_register": {
            "post": {
                "description": "Registers a new specialist, uploads their photo, and returns a jwt and refresh token upon successful registration.\nAutomatically level=1, is_verified=false.\nLogin and password are required, along with a photo upload.\nThere are some validation on password: More than 8 symbols, contain at least one number, one uppercase and one lowercase letter.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Specialist Registration with Photo Upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login",
                        "name": "login",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full Name",
                        "name": "fullname",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Photo Upload",
                        "name": "photo",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful registration, returning jwt and refresh token",
                        "schema": {
                            "$ref": "#/definitions/responses.JWTRefresh"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.MessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.SpecialistLogin": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "responses.JWTRefresh": {
            "type": "object",
            "properties": {
                "JWT": {
                    "type": "string"
                },
                "RefreshToken": {
                    "type": "string"
                }
            }
        },
        "responses.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}